local NCLElem = require "NCube/NCLElem"

local Head = require "NCube/Head"

local Body = require "NCube/Body"

local Document = Class:createClass(NCLElem)

Document.name = "ncl"

Document.xmlHead = nil

Document.attributes = { 
  id = nil,
  xmlns = nil
}

Document.childsMap = {
 ["head"] = {Head, "one", 1}, 
 ["body"] = {Body, "one", 2}
}

Document.head = nil

function Document:create(attributes, xmlHead, empty)
   local attributes = attributes or {}  
   local xmlHead = xmlHead or {}  
   local document = Document:new()   
   
   document:setAttributes(attributes)   
   document:setChilds() 
   document:setXmlHead(xmlHead)
   
   if(empty ~= nil)then
      document:setHead(Head:create())   
      document:setBody(Body:create())  
   end

   return document
end

function Document:setId(id)
   self.attributes.id = id
end

function Document:getId()
   return self.attributes.id
end

function Document:setXmlns(xmlns)
   self.attributes.xmlns = xmlns
end

function Document:getXmlns()
   return self.attributes.xmlns
end

function Document:setXmlHead(xmlHead)
   self.xmlHead = xmlHead
end

function Document:getXmlHead()
   return self.xmlHead
end

function Document:setHead(head)
   self:addChild(head, 1)
end

function Document:getHead()
   return self:getChild(1)
end

function Document:setBody(body)
   self:addChild(body, 2)
end

function Document:getBody()
   return self:getChild(2)
end

function Document:saveNcl(name)
   local ncl = self:generateNcl(0)   
   local file = io.open(name, "w")       
   file:write(ncl)   
   file:close()
end

function Document:loadNCL(name)
   local file = io.open(name, "a+")
   io.input(file)   
   local ncl = "" 
   local isXmlHead = true;
   for line in io.lines() do
      if(isXmlHead)then
         self:setXmlHead(line)
         isXmlHead = false
      else
         ncl = ncl..line.."\n"
      end
   end   
   self:setNcl(ncl)
   file:close()
end

return Document