local NCLElem = require "NCube/NCLElem"

local RegionBase = require "NCube/RegionBase"
local DescriptorBase = require "NCube/DescriptorBase"

local Head = Class:createClass(NCLElem)

Head.name = "head"

Head.childsMap = {
 ["regionBase"] = {RegionBase, "many", 1}, 
 ["descriptorBase"] = {DescriptorBase, "one", 2}
}

Document.regionBase = nil
Document.descriptorBase = nil
Document.seq = true

function Head:create()
   local head = Head:new()   
   head:setChilds()   
   
   head.childs[1] = {}
   head.childs[2] = {}
   
   head.regionBase = {}
   head.descriptorBase = {}
   
   return head
end

function Head:addRegionBase(regionBase)
    table.insert(self:getChild(1), regionBase)
end

function Head:getRegionBase(i)
    return self:getChild(1)[i]
end

function Head:setRegionBases(...)
    if(#arg>0)then
      for i, v in ipairs(arg[1]) do
          self.regionBase = body
          table.insert(self., v)
          table.insert(self:getChild(1), v)
      end
    end
end

function Head:setDescriptorBase(descriptorBase)
   self:addChild(descriptorBase, 2)
end

function Head:getDescriptorBase()
   return self:getChild(2)
end

return Head